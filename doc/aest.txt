NAME
    aest - Authorizator for EST service

SYNOPSIS
  Examples:
          ./aest [options] [actions ...]
          ./aest -d certs add "/CN=auth subject" signer_id "/CN=assigned subject"
          ./aest -d certs list
          ./aest -d certs check aut.pem "/CN=requested subject"
          ./aest -k -d certs check aut.pem "/CN=requested subject"
          ./aest -D -d certs check aut.pem "/CN=requested subject"
          ./aest -d certs reset

  Options:
          -d, --cert-dir=s    Directory with certificates generated by TEST.
          -D, --debug         Print debug information.
          -h, --help          Brief help message.
          -m, --man           Full documentation.
          -N, --no-delete     Do not delete checked entries by action 'check'
          -v, --verbose       Verbose messages.
          -V, --version       Print version information.

  Actions:
          add           Add a new entry in the whitelist.
          check         Check if a PEM file requesting certain subject is allowed to
                        enroll. This action also removes authorized entries.
          list          List whitelist entries.
          reset         Clean database
          nop           NOP

DESCRIPTION
    AEST is a simple authorizer for integrating with a EST service. It
    decides, according a whitelist, if a device can enroll (or not).

ACTIONS
    Each invocation to AEST must be accompanied by an action:

        add This action adds a new entry in the whitelist. It requires the
            following parameters:

            "authentication_subject"
                The subject found in the certificate that will be used for
                authenticating against the EST server.

            "authentication_issuer_id"
                The ID used for signing the certificate in the "test.conf"
                configuration file in the "[certificates]" section. For
                instance, "ManufB" refers to the *Manufacturer B* Sub-CA.

            "assigned_subject_name"
                When a device uses EST for enrolling, it may ask for a new
                subject name. This parameter is the subject name expected to
                be requested by the device. Note that it may be different
                from the "authentication_subject".

            Example:

                ./authorizator -d certs \
                    add "/CN=modelB SN 00110-0001/OU=Comm devs/O=RCU/C=UK" \
                    ManufB \
                    "/CN=dec001.testca/O=testca/C=ES"

        check
            Check if a PEM file requesting certain subject is allowed to
            enroll. This action also removes authorized entries.

            The EST server should call this action passing the following
            arguments:

            "authentication_PEM_File"
                The EST server must extract the client certificate used
                during TLS authentication, save it to disk and pass its path
                to this program.

            "requested_subject"
                This is the requested subject during the enrollment. The EST
                must extract it from the CSR passed by the client.

            This command exits with code 0 if everything is OK, with a exit
            code different of zero if some error happened.

            By default, this command removes the entry that matched
            succesfully with this authentication. If you want to keep the
            whitelist untouched, then add the "-k" flag parameter.

            Example of invocations:

              $ ./aest -D -d certs check certs/dev002.pem \
                                         "/CN=dec001.testca/O=testca/C=ES" \
                && echo "ENROLLED!"
              ./aest:DBG: Action 'check'
              ./aest:MSG: Checking '/CN=modelB SN 00110-0001/OU=Comm devs/O=RCU/C=UK' (certs/dev002.pem) requesting '/CN=dec001.testca/O=testca/C=ES'.
              ./aest:FAT: Cannot enroll
  
              $ ./aest -D -d certs check certs/dev002.pem \
                                         "/CN=dec001.testca/O=testca/C=ES" \
                && echo "ENROLLED!"
              ./aest:DBG: Action 'check'
              ./aest:MSG: Checking '/CN=modelB SN 00110-0001/OU=Comm devs/O=RCU/C=UK' ...
                        ...(certs/dev002.pem) requesting '/CN=dec001.testca/O=testca/C=ES'.
              ./aest:DBG:   - signer 'ManufB', requested '/CN=dec001.testca/O=testca/C=ES'
              certs/dev002.pem: OK
              ./aest:MSG: Can enroll!
              ./aest:DBG:   - Deleting seleted auth
              ENROLLED!

        list
            List whitelist entries.

        reset
            Clean database. Delete all entries.

        nop Nothing to see here. Move along.

OPTIONS
    AEST supports the following options:

        -d, --cert-dir=*s*
            Directory with certificates generated by TEST.

        -D, --debug
            Dump HTTP communications and other useful debug information.
            This flag also enables verbosity (see *-v*).

        -h, --help
            Print a brief help message and exits.

        -m, --man
            Prints the manual page and exits.

        -N, --no-delete
            Do not delete entries from the whitelist that have been
            succesfully matched by action 'check'. It allows to verify if a
            certain enrollment may work without altering the whitelist
            database.

        -v, --verbose
            Verbose messages.

        -V, --version
            Print version information.

SEE ALSO
    pest    PEST manual page.

    test    TEST manual page.

    test.conf
            A complete test suite for testing an EST server supporting
            enrollments based on third-party CA issued certificates. This
            means that clients authenticate themselves using a certificate
            belonging to an external CA during enrollment. Once they are
            enrolled, re-enrollments are conducted using the EST CA.

    "demo.conf" in demo
            A complete (and simpler) test suite for testing the public EST
            service found in <http://testrfc7030.com/>.

    <http://www.testrfc7030.com/>
            This server can be used to test the EST protocol as defined in
            RFC 7030.

