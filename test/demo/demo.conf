#
# test - test EST service
#
#  Full demo, with its own test battery, for testing the testrfc7030.com EST
#  server.
#
#    Copyright (C) 2020 Gerardo García Peña <killabytenow@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# =============================================================================
# GLOBAL CONFIG
# =============================================================================

pest       = ../pest
ca_bits    = 2048
cert_bits  = 2048
certdir    = demo/certs
outdir     = demo/out

# =============================================================================
# EST CONFIG
# =============================================================================

[est]
ca                  = demo/dstcax3.pem
url                 = https://testrfc7030.com:8443/.well-known/est
strict              = 0
plain_base64        = 1
issuer_subject_name = "/CN=estExampleCA"
#creds              = # public service // pass only required during enrollments

# =============================================================================
# HOOKS
# =============================================================================

[hooks]
test_start         = ./demo/hooks/test_start.sh
test_whitelist_add = ./demo/hooks/test_whitelist_add_example.sh

# =============================================================================
# CERTIFICATES
# =============================================================================

[certificates]
# Id      CA   Subject                                                   Issuer
# ------  ---  --------------------------------------------------------  ------
  FakeCA  yes  "/CN=estExampleCA"                                        -
  BadCert no   "/CN=test1"                                               FakeCA

# =============================================================================
# TESTS
# =============================================================================

# -----------------------------------------------------------------------------
# 1. CACerts && CSRAttrs
# -----------------------------------------------------------------------------

[test 1.1]
title     = Get CA certs
whitelist = # void

	# get CA certs -- no enrollments
	1/action  = cacerts

[test 1.2]
title     = Get CSR attributes
whitelist = # void

	# get CSR expected attributes -- no enrollments
	1/action  = csrattrs

# -----------------------------------------------------------------------------
# 2. SimpleEnroll
# -----------------------------------------------------------------------------

[test 2.1]
title     = No credentials, No enroll
whitelist = # void

	# a enrollment without creds/certs is attempted
	#	it should fail
	1/action  = simpleenroll
	1/in      = \
		(/CN=test_2.1) !!

[test 2.2]
title     = Enroll 1 ok, 4 bad
whitelist = (cred=estuser:estpwd,/CN=test_2.2)

	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd, /CN=test_2.2) ++ \
		(cred=___user:estpwd, /CN=test_2.2) !! \
		(cred=estuser:___pwd, /CN=test_2.2) !! \
		(cred=___user:___pwd, /CN=test_2.2) !! \
		(                     /CN=test_2.2) !!

[test 2.3]
title     = Enroll two times, same pass
whitelist = (cred=estuser:estpwd,/CN=test_2.3)

	# first should work, second should fail
	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd,/CN=test_2.3) ++ \
		(cred=estuser:estpwd,/CN=test_2.3) !!

[test 2.4]
title     = Tests with different Subject Names
whitelist = \
	(cred=estuser:estpwd, /CN=2.4) \
	(cred=estuser:estpwd, /CN=test_2.4) \
	(cred=estuser:estpwd, /CN=test_2.4/OU=mytest/L=Barcelona/C=ES) \
	(cred=estuser:estpwd, /C=ES/CN=test_2.4/OU=mytest/DC=mysubdomain/DC=mydomain/DC=com/L=Barcelona)

	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd, /CN=2.4) ++ \
		(cred=estuser:estpwd, /CN=test_2.4) ++ \
		(cred=estuser:estpwd, /CN=test_2.4/OU=mytest/L=Barcelona/C=ES) ++ \
		(cred=estuser:estpwd, /C=ES/CN=test_2.4/OU=mytest/DC=mysubdomain/DC=mydomain/DC=com/L=Barcelona) ++

# -----------------------------------------------------------------------------
# 3. SimpleReenroll
# -----------------------------------------------------------------------------

[test 3.1]
title     = Reenrolling a device
whitelist = \
	(cred=estuser:estpwd, /CN=test_3.1) \
	(cert=test_3.1-1-1,   /CN=test_3.1) \
	(cert=test_3.1-2-1,   /CN=test_3.1)

	# enroll first -- leave enroll in 'test_3.1-1-1'
	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd,/CN=test_3.1) > test_3.1-1-1

	# try to reenroll two times, chaining correct certs
	#	both tries should work
	2/action  = simplereenroll
	2/in      = \
		(cert=test_3.1-1-1, /CN=test_3.1) > test_3.1-2-1 \
		(cert=test_3.1-2-1, /CN=test_3.1) ++

[test 3.2]
title     = Reenrolling a device with the same cert twice
whitelist = \
	(cred=estuser:estpwd, /CN=test_3.2) \
	(cert=test_3.2-1-1,   /CN=test_3.2)

	# enroll first -- leave enroll in 'test_3.2-1-1'
	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd,/CN=test_3.2) > test_3.2-1-1

	# reenroll with the same certificate twice
	#	first should work, second try should FAIL
	2/action  = simplereenroll
	2/in      = \
		(cert=test_3.2-1-1, /CN=test_3.2) ++ \
		(cert=test_3.2-1-1, /CN=test_3.2) !!

[test 3.3]
title     = Renrolling device and changing subject (should not be allowed)
whitelist = \
	(cred=estuser:estpwd, /CN=test_3.3) \
	(cert=test_3.3-1-1,   /CN=test_3.3)

	# enroll first, should work
	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd, /CN=test_3.3) > test_3.3-1-1

	# try to re-enroll (but changing the subject name ilegally)
	2/action  = simplereenroll
	2/in      = \
		(cert=test_3.3-1-1, /CN=test_3.4) !!

[test 3.4]
title     = Renrolling with a fake cert
whitelist = \
	(cred=estuser:estpwd, /CN=test1) \
	(cert=test_3.4-1-1,   /CN=test1) \

	# enroll first, should work
	1/action  = simpleenroll
	1/in      = \
		(cred=estuser:estpwd, /CN=test1) > test_3.4-1-1


	# reenroll with a fake certificate
	#	This should FAIL
	2/action  = simplereenroll
	2/in      = \
		(cert=BadCert, /CN=test1) !!


# -----------------------------------------------------------------------------
# 4. SERVERKEYGEN
# -----------------------------------------------------------------------------

[test 4.1]
title     = (serverkeygen) Enroll 1 ok, 4 bad
whitelist = (cred=estuser:estpwd,/CN=test_4.1)

	1/action  = serverkeygen
	1/in      = \
		(cred=estuser:estpwd, /CN=test_4.1) ++ \
		(cred=___user:estpwd, /CN=test_4.1) !! \
		(cred=estuser:___pwd, /CN=test_4.1) !! \
		(cred=___user:___pwd, /CN=test_4.1) !! \
		(                     /CN=test_4.1) !!

[test 4.2]
title     = (serverkeygen) Enroll two times, same pass
whitelist = (cred=estuser:estpwd,/CN=test_4.2)

	# first should work, second should fail
	1/action  = serverkeygen
	1/in      = \
		(cred=estuser:estpwd, /CN=test_4.2) ++ \
		(cred=estuser:estpwd, /CN=test_4.2) !!

