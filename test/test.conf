#
# test - test EST service
#
#  Test definition file
#
#    Copyright (C) 2020 Gerardo García Peña <killabytenow@gmail.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# =============================================================================
# GLOBAL CONFIG
# =============================================================================

pest       = ../pest
ca_bits    = 2048
cert_bits  = 2048
certdir    = certs
outdir     = out
#force   = 0
#verbose = 0
#debug   = 0

# =============================================================================
# EST CONFIG

# =============================================================================

[est]
ca                  = ca.crt
url                 = https://your_est_server:443/.well-known/est
issuer_subject_name = "/CN=TestCA"
#creds              = est:est # HTTP BASIC credentials by default
#strict = 0

# =============================================================================
# HOOKS
# =============================================================================

[hooks]
#test_start         = ./hooks/test_start.sh
#test_whitelist_add = ./hooks/test_whitelist_add_example.sh

# =============================================================================
# CERTIFICATES
# =============================================================================

[certificates]
# Id      CA   Subject                                                   Issuer
# ------  ---  --------------------------------------------------------  ------
  UglyCA  yes  "/CN=Ugly CA/O=Ugly PKI Services/C=RU"                    -
  ManufA  yes  "/CN=ManufA CA/OU=Devices/O=ManufA Industries/C=ES"       UglyCA
  dec001  no   "/CN=SN00000001/O=Electric/C=ES"                          ManufA
  dec010  no   "/CN=SN00000010/O=Electric/C=ES"                          ManufA
  ManufB  yes  "/CN=Devices CA/OU=ManufB/O=Random Corp United/C=ES"      UglyCA
  dev001  no   "/CN=modelA SN 00100-0001/OU=Elec devs/O=RCU/C=UK"        ManufB
  dev002  no   "/CN=modelB SN 00110-0001/OU=Comm devs/O=RCU/C=UK"        ManufB
  ManufC  yes  "/CN=ManufC CA/OU=Devices/O=ManufC - Bootlegs4all!/C=ES"  UglyCA
  bin001  no   "/CN=SN00000001/O=Electric/C=ES"                          ManufC
  bin002  no   "/CN=SN00000010/O=Electric/C=ES"                          ManufC
  ManufD  yes  "/CN=Devices CA/OU=ManufB/O=Random Corp United/C=ES"      -
  rog001  no   "/CN=modelA SN 00100-0001/OU=Elec devs/O=RCU/C=UK"        ManufD
  rog002  no   "/CN=modelB SN 00110-0001/OU=Comm devs/O=RCU/C=UK"        ManufD

# =============================================================================
# TESTS
# =============================================================================

# -----------------------------------------------------------------------------
# 1. CACerts && CSRAttrs
# -----------------------------------------------------------------------------

[test 1.1]
title     = Get CA certs
whitelist = # void

	# get CA certs -- no enrollments
	1/action  = cacerts

[test 1.2]
title     = Get CSR attributes
whitelist = # void

	# get CSR expected attributes -- no enrollments
	1/action  = csrattrs

# -----------------------------------------------------------------------------
# 2. SimpleEnroll
# -----------------------------------------------------------------------------

[test 2.1]
title     = No credentials, No enroll
whitelist = # void

	# a enrollment without creds/certs is attempted
	#	it should fail
	1/action  = simpleenroll
	1/in      = \
		(/CN=test_2.1)

[test 2.2]
title     = Void whitelist, no enrollments
whitelist = # void

	# certificate based enrollment is attempted, but none authorized
	#	all should fail
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=fail.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=fail.testca/O=testca/C=ES) !!

[test 2.3]
title     = Enrolling a new device from a ManufA
whitelist = \
	(cert=dec001, /CN=dec001.testca/O=testca/C=ES)

	# only first in attemp should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dec001.testca/O=testca/C=ES) ++ \
		(cert=dec010, /CN=dec001.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=dec001.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=dec001.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=dec001.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=dec001.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=dec001.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=dec001.testca/O=testca/C=ES) !!

[test 2.4]
title     = Enrolling a new device from a ManufB
whitelist = \
	(cert=dev001, /CN=dev001.testca/O=testca/C=ES)

	# only last should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=dev001.testca/O=testca/C=ES) ++

[test 2.5]
title     = Enrolling a new device from a ManufC
whitelist = (cert=bin001, /CN=bin001.testca/O=testca/C=ES)

	# only last should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=bin001.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=bin001.testca/O=testca/C=ES) ++

[test 2.6]
title     = Enrolling two devices (ManufA, ManufC)
whitelist = \
	(cert=dec010, /CN=dec010.testca/O=testca/C=ES) \
	(cert=bin002, /CN=bin002.testca/O=testca/C=ES)

	# only last should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=dec010.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=dec010.testca/O=testca/C=ES) ++

	# only last should work
	2/action  = simpleenroll
	2/in      = \
		(cert=dec001, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=bin002.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=bin002.testca/O=testca/C=ES) ++

[test 2.7]
title     = Reenrolling with the same certificate
whitelist = \
	(cert=dev001, /CN=dev001.testca/O=testca/C=ES)

	# first enroll of dev001 should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=dev001.testca/O=testca/C=ES) ++ \
		(cert=dev002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=dev001.testca/O=testca/C=ES) !!

	# all enrolls in this step should fail
	2/action  = simpleenroll
	2/in      = \
		(cert=dec001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=dev001.testca/O=testca/C=ES) !!

[test 2.8]
title      = Try enrolling with an incorrect subject
whitelist  = \
	(cert=dev001, /CN=dev001.testca/O=testca/C=ES)

	# all enrolls should fail - note that none CN will match
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dec010, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=dev001, /CN=devXX1.testca/O=testca/C=ES) !! \
		(cert=dev002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=bin002, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog001, /CN=dev001.testca/O=testca/C=ES) !! \
		(cert=rog002, /CN=dev001.testca/O=testca/C=ES) !!

# -----------------------------------------------------------------------------
# 3. Reenrollment
# -----------------------------------------------------------------------------

[test 3.1]
title     = Renrolling device dec001@ManufA
whitelist = \
	(cert=dec001,       /CN=dec001.testca/O=testca/C=ES) \
	(cert=test_3.1-1-1, /CN=dec001.testca/O=testca/C=ES) \
	(cert=test_3.1-1-2, /CN=dec001.testca/O=testca/C=ES)

	# the first enrollment should work correctly
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dec001.testca/O=testca/C=ES) > test_3.1-1-1

	# this re-enrollment should work too!
	2/action  = simplereenroll
	2/in      = \
		(cert=test_3.1-1-1, /CN=dec001.testca/O=testca/C=ES) > test_3.1-2-1

	# and this one too!
	3/action  = simplereenroll
	3/in      = \
		(cert=test_3.1-2-1, /CN=dec001.testca/O=testca/C=ES) ++

[test 3.2]
title     = Reenrolling a device with the same cert twice
whitelist = \
	(cert=dev002,       /CN=dec001.testca/O=testca/C=ES) \
	(cert=test_3.2-1-1, /CN=dec001.testca/O=testca/C=ES)

	# enroll first, should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dev002, /CN=dec001.testca/O=testca/C=ES) > test_3.2-1-1

	# reenroll with the same certificate twice
	#	first should work, second try should FAIL
	2/action  = simplereenroll
	2/in      = \
		(cert=test_3.2-1-1, /CN=test_3.2) ++ \
		(cert=test_3.2-1-1, /CN=test_3.2) !!

[test 3.3]
title     = Renrolling device and changing the Subject (should not be allowed)
whitelist = \
	(cert=dec001,       /CN=dec001.testca/O=testca/C=ES)
	(cert=test_3.3-1-1, /CN=dec001.testca/O=testca/C=ES)

	# enroll first, should work
	1/action  = simpleenroll
	1/in      = \
		(cert=dec001, /CN=dec001.testca/O=testca/C=ES) > test_3.3-1-1

	# try to re-enroll (but changing the subject name ilegally)
	2/action  = simplereenroll
	2/in      = \
		(cert=test_3.3-1-1, /CN=dec002.testca/O=testca/C=ES) !!

